
** Everything in python is object **
** Every object contains methods ****



objects
------------

number
---------



number can be integer or decimal or octal or hexa.

val = 10
aval = 34.43


string
-------
string is defined in single or double or triple quotes.

aName = 'python programming'
bName = "unix programming"
cname = """java programming"""
dName = '''scala programming'''

eName = 'Python'
ENAME = "Python'
Ename = "python'

list ( array in C )
------------------
list contains set of elements.
Elements can be numbers or strings or any combination.
list elements are defined in [].

aList = [10,20,30]
bList = ["unix","java",40,34.32]



tuple  ( immutable , read only , uneditable )
-------
tuple contains set of elements.
Elements can be numbers or strings or any combination.
tuple elements are defined in ().
** Elements inside tuple cant be modified directly **


atup = (30,40,50)
btup = (30,"python","java")

# list of lists
employees = [["ram",'1-1-90','US'],['rita','2-2-90','UK'] ]


employees = [("ram",'1-1-90','US'),('rita','2-2-90','UK')]





dictionary  ( hashmap , hash , json )
-------------------------------------------
dictionary contains elements in the form of keys and values.
dictionary is defined in {}.
In dictionary , keys are always UNIQUE  , key can be number or string used to identify the value.
                value can be number or string or list or tuple or dictionary or any other complex structure.
             



syntax:   object = { key:value , key:value , key:value }
           book  = {"chap1":10 ,"chap2":20 ,"chap3":30}
         bookinfo  = {"chap1":['rao','UK'] ,"chap2":['rita','US'] }
          numinfo ={1:2,3:4,:5:6}
          book  = {"chap1":10 ,"chap2":20 ,"chap3":30,"chap1":100}


a = 10
a = 100
print(a)









set
----
set is UNORDERED collection of UNIQUE elements of the SAME type.

aset = {10,10,20,20,30,30}
bset = {30,40,50}




mutable | immutable
---------------------

mutable objects ( changeable)   :  list dictionary set
immutable objects ( unchangeable): number  string tuple



operators
------------


arithemtic operators :  + - * % /


relational operators :  <  <= > >=  == !=

logical operators :  and  or  not

assignment operators :( ++ and -- are NOT allowed in python )

val = 1

val = val + 1    (or)  val+=1  


special operators :
------------------

+ ( concat )
*
in
as




file handling
-------------


working with flat files ( txt  csv  tsv  log conf  xml  json  ....)
--------------------------------------------------------

modes:
read ( r)
write( w)
append ( a)


open the file
-----------------

syntax:    object = open(filename,mode)
example:     fr   = open('customers.txt','r')   # read mode
             # file should exist to read the file

             fw   = open('customers.txt','w')   # write mode
             # if file is NOT existing ... file gets created first
             # if file is already existing... it overwrite the existing content.


             fa   = open('customers.txt','a')   # append mode
             # if file is NOT existing ... file gets created first
             # if file is already existing... it appends the new content.




closing the file
---------------
fr.close()






read operation
---------------

ways of reading the file

- reading line by line using file object
- fobj.readlines()  # return output in the list
- fobj.read()       # return single string
- using csv library
- using pandas library





working with third party files ( docx  xlsx  zip rar 7z  pdf ..... )




Exception handling
-----------------
There are two types of errors

1. syntax error
2. semantic error or logical error


Hanlding the errors that occurs during the runtime is known as exception handling.

try
except
else
finally






library | package | module | routines
-------------------------
Every library contains set of methods.


There are 2 types of libraries


builtin libraries
------------------
builtin libraries are installed with python.
with Anaconda :  8000+ packages mainly related to analytics and ML


third party libraries
---------------------
Depending on my requirement, developer has to install the third party library from  www.pypi.org

- installing using pip tool
- downloading and the installing the package manually.











